#include <stdio.h>
#include <math.h> // Include the math library for trigonometric, logarithmic, and algebraic functions

int main() {
    // declare local variables
    char opt;
    int n1, n2;
    float res;

    printf(" Select an operator (+, -, *, /, s, c, t, a, o, b, x, r, f, v, l, n, g): \n ");
    scanf("%c", &opt); // take an operator

    printf(" Enter the first number: ");
    scanf("%d", &n1); // take fist number

    if (opt == 's' || opt == 'c' || opt == 't' || opt == 'a' || opt == 'o' || opt == 'b' || opt == 'x' || opt == 'r' || opt == 'f' || opt == 'v' || opt == 'l' || opt == 'n' || opt == 'g') {
        // If the selected operation is a trigonometric, algebraic, or logarithmic operation
        // take only one number
        n2 = 0; // To avoid issues with uninitialized variable
    } else {
        printf(" Enter the second number: ");
        scanf("%d", &n2); // take second number
    }

    if (opt == '+') {
        res = n1 + n2; // add two numbers
        printf(" Addition of %d and %d is: %f", n1, n2, res);
    } else if (opt == '-') {
        res = n1 - n2; // subtract two numbers
        printf(" Subtraction of %d and %d is: %f", n1, n2, res);
    } else if (opt == '*') {
        res = n1 * n2; // multiply two numbers
        printf(" Multiplication of %d and %d is: %f", n1, n2, res);
    } else if (opt == '/') {
        if (n2 == 0) {
            printf(" \n Divisor cannot be zero. Please enter another value ");
            scanf("%d", &n2);
        }
        res = (float)n1 / n2; // divide two numbers, cast n1 to float for accurate division
        printf(" Division of %d and %d is: %.2f", n1, n2, res);
    } else if (opt == 's') {
        res = sin(n1 * M_PI / 180); // sine function, convert degrees to radians
        printf(" Sine of %d degrees is: %f", n1, res);
    } else if (opt == 'c') {
        res = cos(n1 * M_PI / 180); // cosine function, convert degrees to radians
        printf(" Cosine of %d degrees is: %f", n1, res);
    } else if (opt == 't') {
        res = tan(n1 * M_PI / 180); // tangent function, convert degrees to radians
        printf(" Tangent of %d degrees is: %f", n1, res);
    } else if (opt == 'a') {
        res = asin(n1) * 180 / M_PI; // arcsine function, convert radians to degrees
        printf(" Arcsine of %d is: %f degrees", n1, res);
    } else if (opt == 'o') {
        res = acos(n1) * 180 / M_PI; // arccosine function, convert radians to degrees
        printf(" Arccosine of %d is: %f degrees", n1, res);
    } else if (opt == 'b') {
        res = atan(n1) * 180 / M_PI; // arctangent function, convert radians to degrees
        printf(" Arctangent of %d is: %f degrees", n1, res);
    } else if (opt == 'x') {
        res = pow(n1, n2); // exponentiation
        printf(" %d raised to the power %d is: %f", n1, n2, res);
    } else if (opt == 'r') {
        res = sqrt(n1); // square root
        printf(" Square root of %d is: %f", n1, res);
    } else if (opt == 'f') {
        int factorial = 1;
        for (int i = 1; i <= n1; i++) {
            factorial *= i;
        }
        res = factorial; // factorial
        printf(" Factorial of %d is: %f", n1, res);
    } else if (opt == 'v') {
        res = fabs(n1); // absolute value
        printf(" Absolute value of %d is: %f", n1, res);
    } else if (opt == 'l') {
        res = log10(n1); // logarithm (base 10)
        printf(" Logarithm (base 10) of %d is: %f", n1, res);
    } else if (opt == 'n') {
        res = log(n1); // natural logarithm (base e)
        printf(" Natural logarithm (base e) of %d is: %f", n1, res);
    } else if (opt == 'g') {
        int base;
        printf(" Enter the base for custom base logarithm: ");
        scanf("%d", &base);
        res = log(n1) / log(base); // custom base logarithm
        printf(" Logarithm (base %d) of %d is: %f", base, n1, res);
    } else {
        printf(" \n You have entered wrong inputs ");
    }

    return 0;
}

       
