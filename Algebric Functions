#include <stdio.h>
#include <math.h>

// Function declarations
float add(float a, float b);
float subtract(float a, float b);
float multiply(float a, float b);
float divide(float a, float b);
float sine(float angle);
float cosine(float angle);
float tangent(float angle);
float arcsine(float value);
float arccosine(float value);
float arctangent(float value);
float exponentiation(float base, float exponent);
float squareRoot(float value);
float cubeRoot(float value);
float nthRoot(float value, float n);
unsigned long long factorial(int n);
float absoluteValue(float value);

int main() {
    float num1, num2, result;
    char operation;

    // Input
    printf("Enter first number: ");
    scanf("%f", &num1);

    printf("Enter an operation (+, -, *, /, sin, cos, tan, asin, acos, atan, exp, sqrt, cbrt, nthrt, !, abs): ");
    scanf(" %c", &operation);

    if (operation != 'sin' && operation != 'cos' && operation != 'tan' &&
        operation != 'asin' && operation != 'acos' && operation != 'atan' &&
        operation != 'exp' && operation != 'sqrt' && operation != 'cbrt' &&
        operation != 'nthrt' && operation != '!' && operation != 'abs') {
        printf("Enter second number: ");
        scanf("%f", &num2);
    }

    // Perform the requested operation
    switch (operation) {
        case '+':
            result = add(num1, num2);
            printf("%.2f + %.2f = %.2f\n", num1, num2, result);
            break;
        case '-':
            result = subtract(num1, num2);
            printf("%.2f - %.2f = %.2f\n", num1, num2, result);
            break;
        case '*':
            result = multiply(num1, num2);
            printf("%.2f * %.2f = %.2f\n", num1, num2, result);
            break;
        case '/':
            if (num2 != 0) {
                result = divide(num1, num2);
                printf("%.2f / %.2f = %.2f\n", num1, num2, result);
            } else {
                printf("Error: Division by zero\n");
            }
            break;
        case 'sin':
            result = sine(num1);
            printf("sin(%.2f) = %.2f\n", num1, result);
            break;
        case 'cos':
            result = cosine(num1);
            printf("cos(%.2f) = %.2f\n", num1, result);
            break;
        case 'tan':
            result = tangent(num1);
            printf("tan(%.2f) = %.2f\n", num1, result);
            break;
        case 'asin':
            result = arcsine(num1);
            printf("asin(%.2f) = %.2f\n", num1, result);
            break;
        case 'acos':
            result = arccosine(num1);
            printf("acos(%.2f) = %.2f\n", num1, result);
            break;
        case 'atan':
            result = arctangent(num1);
            printf("atan(%.2f) = %.2f\n", num1, result);
            break;
        case 'exp':
            result = exponentiation(num1, num2);
            printf("%.2f^%.2f = %.2f\n", num1, num2, result);
            break;
        case 'sqrt':
            result = squareRoot(num1);
            printf("sqrt(%.2f) = %.2f\n", num1, result);
            break;
        case 'cbrt':
            result = cubeRoot(num1);
            printf("cbrt(%.2f) = %.2f\n", num1, result);
            break;
        case 'nthrt':
            result = nthRoot(num1, num2);
            printf("%.2fth root of %.2f = %.2f\n", num2, num1, result);
            break;
        case '!':
            result = factorial((int)num1);
            printf("%.2f! = %llu\n", num1, result);
            break;
        case 'abs':
            result = absoluteValue(num1);
            printf("abs(%.2f) = %.2f\n", num1, result);
            break;
        default:
            printf("Error: Invalid operation\n");
            break;
    }

    return 0;
}

// Function definitions
float add(float a, float b) {
    return a + b;
}

float subtract(float a, float b) {
    return a - b;
}

float multiply(float a, float b) {
    return a * b;
}

float divide(float a, float b) {
    return a / b;
}

float sine(float angle) {
    return sin(angle);
}

float cosine(float angle) {
    return cos(angle);
}

float tangent(float angle) {
    return tan(angle);
}

float arcsine(float value) {
    return asin(value);
}

float arccosine(float value) {
    return acos(value);
}

float arctangent(float value) {
    return atan(value);
}

float exponentiation(float base, float exponent) {
    return pow(base, exponent);
}

float squareRoot(float value) {
    return sqrt(value);
}

float cubeRoot(float value) {
    return cbrt(value);
}

float nthRoot(float value, float n) {
    return pow(value, 1/n);
}

unsigned long long factorial(int n) {
    if (n == 0 || n == 1) {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}

float absoluteValue(float value) {
    return fabs(value);
}
